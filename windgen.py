import pandas as pd
import matplotlib.pyplot as plt #import libraries
from statsmodels.tsa.seasonal import seasonal_decompose
import matplotlib.dates as mdates
edata=pd.read_csv('espeni.csv',parse_dates=True,infer_datetime_format=True,index_col='ELEXM_utc')#read pumped storage

begin_day='2013-01-01 00:00:00' #pumped discharge only has non-zero values after this date 2012-06-29
final_day='2020-10-02 00:00:00' #2020-10-02 22:30:00 is the latest date useable
windcap=[8871,10976,12440,13602,16218,19837,21700,23950]#wind capacity data, assigned to each year
windtime=['2013-01-01 00:00:00','2014-01-01 00:00:00','2015-01-01 00:00:00','2016-01-01 00:00:00','2017-01-01 00:00:00','2018-01-01 00:00:00','2019-01-01 00:00:00','2020-01-01 00:00:00']
windtime=mdates.datestr2num(windtime)#convert to datetime format

edata=edata[begin_day:final_day] #slice dataset for desired range

windgen=edata.POWER_ELEXM_WIND_MW+edata.POWER_NGEM_EMBEDDED_WIND_GENERATION_MW#add wind gen with embedded

fig,(ax1,ax2,ax3,ax4)=plt.subplots(4,1,figsize=(10,20))
ax1.plot(windtime,windcap,'k-',label='Wind capacity')#plot max wind capacity
csumplot=pd.DataFrame(windgen,edata.index)
csumplot=seasonal_decompose(csumplot,model='additive',period=48)#seasonal decomposition

csumplot.observed.plot(ax=ax1,label='Wind generation')
ax1.set(xlabel='Time (half-hours)',ylabel='Power generated by wind energy (MW)',title='Power generated by wind energy from'+' '+ begin_day[:7]+' '+'to'+' '+final_day[:7])
ax1.legend()
csumplot.trend.plot(ax=ax2)
ax2.set(xlabel='Time (half-hours)',ylabel='Trend of generation (MW)')
csumplot.seasonal.plot(ax=ax3) 
ax3.set(xlabel='Time (half-hours)',ylabel='Seasonality of generation (MW)')
csumplot.resid.plot(ax=ax4)
ax4.set(xlabel='Time (half-hours)',ylabel='Residual of daily generation (MW)')
plt.show()






